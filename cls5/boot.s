BOOTSEG equ 0x07C0 ;宏定义，用于初始化ES

;使用bios中断0x13，功能号(AH = 2)进行软盘读取
mov dx, 0x0000 ;DH = 0，磁头号
               ;DL = 0，驱动器号
mov cx, 0x0002 ;CH，10位磁道号低8位
               ;CL - 位7、6是磁道号高2位
               ;CL - 位5~0表示扇区号（从1开始）
               ;本指令表示读取0号驱动器0号磁道第2号扇区
               ;第1扇区就是boot扇区
mov ax, 0x1000 ;设置拷贝的目的地段描述符为0x1000
mov es, ax
xor bx, bx     ;设置bx为0，[es:bx]表示目的地内存地址
               ;即0x1000 * 16 + 0 = 0x10000
mov al, 10      ;读取的扇区数为10
               ;注意：如果读取的内容超过512byte，则加大
mov ah, 0x02   ;AH = 2，表示读扇区
int 0x13

cli ;关闭中断
mov ax, 0x1000
mov ds, ax
xor ax, ax ;移动到内存0地址
mov es, ax
mov cx, 1280 ;移动cx个double word(4 bytes)
sub si, si
sub di, di
rep movsd

mov ax, BOOTSEG
mov ds, ax ;要访问内存数据，则需设置数据段
lidt [idt_48] ;加载中断表，请忽略，以后会讲
lgdt [gdt_48] ;加载GDT描述符


mov eax, cr0
or al, 1 ;将保护模式的标记PE设置为1
mov cr0, eax

;这里加dword是为了生成一个32位偏移地址的指令
;这条指令执行的时候，已经是在保护模式了
;是利用了CPU预取的机制，在执行mov cr0, eax时，
;就将其读入了指令寄存器
;0x0008表示GDT中第一个描述符
;0x00000000是跳转的32位偏移地址，有效的
jmp dword 0x0008: 0x00000000

;注意：以下GDT的设置一定要对照格式图表
gdt:
    dw 0, 0, 0, 0 ;第0个描述符，不使用

    ;第一个描述符(0x08)，表示代码段
    dw 0x07FF ;段限长低16位，则段限长为：
              ;(0x07FF + 1) * 4KB = 8MB
    dw 0x0000 ;基地址低16位0，所以基地址为0
    dw 0x9A00 ;0x9A = 1001 1010
              ;高4位分别表示P = 1段在内存中
              ;DPL = 0，最高权限
              ;S = 1，非系统段
              ;且TYPE的bit 3为1，表示代码段
              ;低8位表示基地址23~16为0
    dw 0x00C0 ;高8位表示基地址31~24为0
              ;G标志(bit 7) = 1，表示颗粒度为4KB
              ;注意：保护模式下颗粒度一般都设4KB
              ;最后4位为0，表示段限长19~16位是0
    
    ;第2个段描述符（0x10），表示显卡内存
    ;显卡默认在CGA模式，字符彩屏
    ;映射在内存地址0xb8000~0xc8000，共16K
    ;我们只用前面的4K
    ;所以颗粒度G = 1，且段限长Limit = 0
    dw 0x0002
    dw 0x8000
    dw 0x920B ;0x92 = 1001 0010
              ;S = 1且TYPE(bit 3)为0，表示数据段
              ;DPL = 0
              ;E = 0，表示地址是从小往大增长
              ;W = 1表示可写入
    dw 0x00C0

    ;第三个描述符(0x18)，表示数据段
    dw 0x07FF ;段限长低16位，则段限长为：
              ;(0x07FF + 1) * 4KB = 8MB
    dw 0x0000 ;基地址低16位0，所以基地址为0
    dw 0x9200 ;0x92 = 1001 0010
              ;高4位分别表示P = 1段在内存中
              ;DPL = 0，最高权限
              ;S = 1，非系统段
              ;且TYPE的bit 3为0，表示数据段
              ;低8位表示基地址23~16为0
    dw 0x00C0 ;高8位表示基地址31~24为0
              ;G标志(bit 7) = 1，表示颗粒度为4KB
              ;注意：保护模式下颗粒度一般都设4KB
              ;最后4位为0，表示段限长19~16位是0
 
end_gdt:

idt_48:
    dw 0
    dw 0
    dw 0

gdt_48:
    dw (end_gdt - gdt) - 1 ;gdt的限长
                           ;- 1的作用和段描述符的Limit类似
                           ;都是表示最后一个有效的地址(<=)
    dw BOOTSEG * 16 + gdt ;gdt的起始地址
    dw 0

times 510 - ($ - $$) db 0 ;填充一堆的0
                          ;$表示当前位置，$$表示文件头部
db 0x55
db 0xAA ;上面两行用于设置引导扇区的标识
